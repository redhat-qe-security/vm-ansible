---
- name: Check SSh key
  stat:
    path: "{{ssh_key}}"
  register: stat_result

- name: Generate key
  openssh_keypair:
    path: "{{ ssh_key }}"
    type: rsa
    size: 2048
    state: present
    force: no
  when: not stat_result.stat.exists

- name: Check repo file
  stat:
    path: "{{ repo_file }}"
    follow: yes
  register: repo_file_stat

- name: Prepare repo file
  block:
    - name: Copy repo file template to {{ repo_file }}
      copy:
        src: "{{ role_path }}/files/template.repo"
        dest: "{{ repo_file }}"

    - name: Update repo file
      replace:
        path: "{{ repo_file }}"
        regexp: '\{\{repo_base_url\}\}'
        replace: "{{ repo_base_url }}"
        backup: yes

    - name: Update buidlroot repo if set
      blockinfile:
        path: "{{ repo_file }}"
        backup: yes
        marker: "\n"
        marker_begin: ""
        marker_end: ""
        block: |
          [buildroot]
          name=Buildroot
          baseurl="{{ repo_buildroot_url }}"
          gpgcheck=0
          enabled=1
      when: repo_base_url is defined
  when: not repo_file_stat.stat.exists

- name: Prepare VM (virt-sysprep)
  shell:
    cmd: |
      virt-sysprep --uninstall cloud-init \
          --selinux-relabel \
          --root-password password:redhat \
          --ssh-inject root:file:"{{ ssh_key }}.pub" \
          --upload "{{ repo_file }}":/etc/yum.repos.d/redhat.repo \
          -a "{{ img_path }}" \
          --connect qemu:///system

- name: Install VM (virt-install)
  shell:
    cmd: |
      virt-install --connect qemu:///system --import --memory 2048 --vcpus 2 --noautoconsole --os-variant rhel-unknown \
                   --name "{{ img_name }}" --check all=off --disk path="{{ img_path }}" 

- name: Get "{{ img_name }}" IP address
  shell: virsh --connect qemu:///system domifaddr "{{ img_name }}"  | grep -o -E "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.?)){4}"
  register: ip_addr_
  until: ip_addr_.stdout != '' and ip_addr_.stdout | ansible.utils.ipaddr
  retries: 10
  delay: 6

- name: Create initial snapshot
  shell: virsh --connect qemu:///system snapshot-create-as --domain "{{ img_name }}" --name "initial"

- name: Add "{{ img_name }}" to SSH config file
  blockinfile:
    path: /home/{{ ansible_user_id }}/.ssh/config
    backup: yes
    marker: "# {mark} {{ img_name }}"
    block: |
      Host {{ ip_addr_.stdout }} {{ img_name }}
        Hostname {{ ip_addr_.stdout }}
        Preferredauthentications publickey
        User root
        UserKnownHostsFile /dev/null
        StrictHostKeyChecking no
        IdentitiesOnly=yes
        IdentityFile {{ ssh_key }}

- name: Add VM to inventory
  add_host:
      name: vm
      ansible_host: "{{ ip_addr_.stdout }}"
      ansible_ssh_private_key_file: "{{ ssh_key }}"
